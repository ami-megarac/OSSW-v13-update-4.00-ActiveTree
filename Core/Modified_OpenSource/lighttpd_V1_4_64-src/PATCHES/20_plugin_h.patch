--- lighttpd-1.4.64/src/plugin.h	2022-01-19 23:23:51.000000000 +0530
+++ ws/source/lighttpd_V1_4_64-13.0.0.0.0-src/data/.workspace/lighttpd/src/plugin.h	2022-09-20 17:44:04.034970310 +0530
@@ -44,11 +44,12 @@
 #define SETDEFAULTS_FUNC   __attribute_cold__ SERVER_FUNC
 #define SIGHUP_FUNC        __attribute_cold__ SERVER_FUNC
 #define TRIGGER_FUNC       SERVER_FUNC
-
+#define PROCMANAGE_FUNC    SERVER_FUNC
 #define SUBREQUEST_FUNC    REQUEST_FUNC
 #define PHYSICALPATH_FUNC  REQUEST_FUNC
 #define REQUESTDONE_FUNC   REQUEST_FUNC
 #define URIHANDLER_FUNC    REQUEST_FUNC
+#define READ_CONT_FUNC     CONNECTION_FUNC
 
 #define PLUGIN_DATA        int id; \
                            int nconfig; \
@@ -72,7 +73,9 @@
 	handler_t (* handle_subrequest)        (request_st *r, void *p_d);  /* handler for request (max one per request) */
 	handler_t (* handle_response_start)    (request_st *r, void *p_d);  /* before response headers are written */
 	handler_t (* handle_request_reset)     (request_st *r, void *p_d);  /* after request done or request abort */
-
+	handler_t (* handle_procmanage)      (server *srv, void *p_d);     	/* Register the lighttpd with process manager */
+	handler_t (* handle_joblist)         (request_st *r, void *p_d);    /* after all events are handled */
+	handler_t (* handle_readpost)        (server *srv, connection *con, void *p_d);    /* during readpost */
 	handler_t (* handle_connection_accept) (connection *con, void *p_d);  /* after accept() socket */
 	handler_t (* handle_connection_shut_wr)(connection *con, void *p_d);  /* done writing to socket */
 	handler_t (* handle_connection_close)  (connection *con, void *p_d);  /* before close() of socket */
@@ -80,7 +83,7 @@
 	handler_t (* handle_trigger)         (server *srv, void *p_d);        /* once a second */
 	handler_t (* handle_sighup)          (server *srv, void *p_d);        /* at a sighup */
 	handler_t (* handle_waitpid)         (server *srv, void *p_d, pid_t pid, int status); /* upon a child process exit */
-
+	handler_t (* read_continuous)        (request_st *r, void *p_d);   /* */
 	void *(* init)                       ();
 	handler_t (* priv_defaults)          (server *srv, void *p_d);
 	handler_t (* set_defaults)           (server *srv, void *p_d);
@@ -98,6 +101,11 @@
 __attribute_cold__
 void plugins_free(server *srv);
 
+//File upload
+handler_t plugins_call_handle_readpost(server *srv, connection *con);
+handler_t plugins_call_handle_joblist(request_st *r);
+handler_t plugins_call_read_continuous(request_st *r);
+handler_t plugins_call_handle_procmanage(server *srv);
 handler_t plugins_call_handle_uri_clean(request_st *r);
 handler_t plugins_call_handle_subrequest_start(request_st *r);
 handler_t plugins_call_handle_response_start(request_st *r);
@@ -106,7 +114,6 @@
 handler_t plugins_call_handle_docroot(request_st *r);
 handler_t plugins_call_handle_physical(request_st *r);
 handler_t plugins_call_handle_request_reset(request_st *r);
-
 handler_t plugins_call_handle_connection_accept(connection *con);
 handler_t plugins_call_handle_connection_shut_wr(connection *con);
 handler_t plugins_call_handle_connection_close(connection *con);
