--- lighttpd/configure	2017-01-14 13:05:57.000000000 +0800
+++ lighttpd_new/configure	2019-10-09 13:50:26.577496254 +0800
@@ -16176,87 +16176,87 @@
     OLDLIBS="$LIBS"
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for BIO_f_base64 in -lcrypto" >&5
 $as_echo_n "checking for BIO_f_base64 in -lcrypto... " >&6; }
-if ${ac_cv_lib_crypto_BIO_f_base64+:} false; then :
+#if ${ac_cv_lib_crypto_BIO_f_base64+:} false; then :
   $as_echo_n "(cached) " >&6
-else
-  ac_check_lib_save_LIBS=$LIBS
-LIBS="-lcrypto  $LIBS"
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-/* Override any GCC internal prototype to avoid an error.
-   Use char because int might match the return type of a GCC
-   builtin and then its argument prototype would still apply.  */
+#else
+#  ac_check_lib_save_LIBS=$LIBS
+#LIBS="-lcrypto  $LIBS"
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+
+#/* Override any GCC internal prototype to avoid an error.
+#   Use char because int might match the return type of a GCC
+#   builtin and then its argument prototype would still apply.  */
 #ifdef __cplusplus
-extern "C"
-#endif
-char BIO_f_base64 ();
-int
-main ()
-{
-return BIO_f_base64 ();
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
+#extern "C"
+##endif
+#char BIO_f_base64 ();
+#int
+#main ()
+#{
+#return BIO_f_base64 ();
+#  ;
+#  return 0;
+#}
+#_ACEOF
+#if ac_fn_c_try_link "$LINENO"; then :
   ac_cv_lib_crypto_BIO_f_base64=yes
-else
-  ac_cv_lib_crypto_BIO_f_base64=no
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-LIBS=$ac_check_lib_save_LIBS
-fi
+#else
+#  ac_cv_lib_crypto_BIO_f_base64=no
+#fi
+#rm -f core conftest.err conftest.$ac_objext \
+#    conftest$ac_exeext conftest.$ac_ext
+#LIBS=$ac_check_lib_save_LIBS
+#fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_crypto_BIO_f_base64" >&5
 $as_echo "$ac_cv_lib_crypto_BIO_f_base64" >&6; }
-if test "x$ac_cv_lib_crypto_BIO_f_base64" = xyes; then :
+#if test "x$ac_cv_lib_crypto_BIO_f_base64" = xyes; then :
 
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSL_new in -lssl" >&5
 $as_echo_n "checking for SSL_new in -lssl... " >&6; }
-if ${ac_cv_lib_ssl_SSL_new+:} false; then :
+#if ${ac_cv_lib_ssl_SSL_new+:} false; then :
   $as_echo_n "(cached) " >&6
-else
-  ac_check_lib_save_LIBS=$LIBS
-LIBS="-lssl  -lcrypto "$DL_LIB"  $LIBS"
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-/* Override any GCC internal prototype to avoid an error.
-   Use char because int might match the return type of a GCC
-   builtin and then its argument prototype would still apply.  */
+#else
+#  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lssl  -lcrypto "$DL_LIB" -lz -lm   $LIBS"
+#cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+#/* end confdefs.h.  */
+
+#/* Override any GCC internal prototype to avoid an error.
+#   Use char because int might match the return type of a GCC
+#   builtin and then its argument prototype would still apply.  */
 #ifdef __cplusplus
-extern "C"
+#extern "C"
 #endif
-char SSL_new ();
-int
-main ()
-{
-return SSL_new ();
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
+#char SSL_new ();
+#int
+#main ()
+#{
+#return SSL_new ();
+#  ;
+#  return 0;
+#}
+#_ACEOF
+#if ac_fn_c_try_link "$LINENO"; then :
   ac_cv_lib_ssl_SSL_new=yes
-else
-  ac_cv_lib_ssl_SSL_new=no
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-LIBS=$ac_check_lib_save_LIBS
-fi
+#else
+#  ac_cv_lib_ssl_SSL_new=no
+#fi
+#rm -f core conftest.err conftest.$ac_objext \
+#    conftest$ac_exeext conftest.$ac_ext
+#LIBS=$ac_check_lib_save_LIBS
+#fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_ssl_SSL_new" >&5
 $as_echo "$ac_cv_lib_ssl_SSL_new" >&6; }
 if test "x$ac_cv_lib_ssl_SSL_new" = xyes; then :
-   SSL_LIB="-lssl -lcrypto"
+   SSL_LIB="-lssl -lcrypto -lz -lm "
 
 $as_echo "#define HAVE_LIBSSL /**/" >>confdefs.h
 
 fi
 
 
-fi
+#fi
 
     LIBS="$OLDLIBS"
 
