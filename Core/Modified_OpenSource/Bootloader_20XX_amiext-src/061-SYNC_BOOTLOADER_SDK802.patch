--- uboot/drivers/pinctrl/aspeed/pinctrl_ast2600.c	2022-08-10 14:46:28.918108889 +0800
+++ uboot-new/drivers/pinctrl/aspeed/pinctrl_ast2600.c	2022-08-11 16:05:54.774212340 +0800
@@ -119,7 +119,45 @@
 	{ 0x4B4, GENMASK(31, 30), 0 },
 };
 
+static struct aspeed_sig_desc si2c1_link[] = {
+	{ 0x698, GENMASK(9, 8), 0 },
+};
+
+static struct aspeed_sig_desc si2c2_link[] = {
+	{ 0x698, GENMASK(11, 10), 0 },
+};
+
+static struct aspeed_sig_desc si2c3_link[] = {
+	{ 0x698, GENMASK(13, 12), 0 },
+};
+
+static struct aspeed_sig_desc si2c4_link[] = {
+	{ 0x698, GENMASK(15, 14), 0 },
+};
+
+static struct aspeed_sig_desc si2c5_link[] = {
+	{ 0x4B8, GENMASK(17, 16), 0 },
+};
+
+static struct aspeed_sig_desc si2c6_link[] = {
+	{ 0x4B8, GENMASK(19, 18), 0 },
+};
 
+static struct aspeed_sig_desc si2c7_link[] = {
+	{ 0x4B8, GENMASK(21, 20), 0 },
+};
+
+static struct aspeed_sig_desc si2c8_link[] = {
+	{ 0x4B8, GENMASK(23, 22), 0 },
+};
+
+static struct aspeed_sig_desc si2c9_link[] = {
+	{ 0x4B8, GENMASK(25, 24), 0 },
+};
+
+static struct aspeed_sig_desc si2c10_link[] = {
+	{ 0x4B8, GENMASK(27, 26), 1 },
+};
 static struct aspeed_sig_desc mac1_link[] = {
 	{ 0x410, BIT(4), 0 },
 #ifndef CONFIG_FPGA_ASPEED
@@ -278,7 +316,7 @@
 static struct aspeed_sig_desc spi1wp_link[] = {
 	{ 0x438, BIT(10), 0 },
 };
-	
+
 static struct aspeed_sig_desc spi1quad_link[] = {
 	{ 0x438, GENMASK(15, 14), 0 },
 };
@@ -307,6 +345,11 @@
 	{ 0xd48, GENMASK(23, 22), 0 },
 };
 
+static struct aspeed_sig_desc usb2ad_link[] = {
+	{ 0x440, BIT(24), 0 },
+	{ 0x440, BIT(25), 1 },
+};
+
 static struct aspeed_sig_desc usb2ah_link[] = {
 	{ 0x440, BIT(24), 1 },
 	{ 0x440, BIT(25), 0 },
@@ -318,7 +361,8 @@
 };
 
 static struct aspeed_sig_desc pcie0rc_link[] = {
-	{ 0x40, BIT(21), 0 },	
+	{ 0x40, BIT(21), 0 },
+	{ 0xC8, BIT(6), 1 },	//enable ep for as Root Complex
 };
 
 static struct aspeed_sig_desc pcie1rc_link[] = {
@@ -410,8 +454,19 @@
 	{ "I2C14", ARRAY_SIZE(i2c14_link), i2c14_link },
 	{ "I2C15", ARRAY_SIZE(i2c15_link), i2c15_link },
 	{ "I2C16", ARRAY_SIZE(i2c16_link), i2c16_link },
+	{ "SI2C1", ARRAY_SIZE(si2c1_link), si2c1_link },
+	{ "SI2C2", ARRAY_SIZE(si2c2_link), si2c2_link },
+	{ "SI2C3", ARRAY_SIZE(si2c3_link), si2c3_link },
+	{ "SI2C4", ARRAY_SIZE(si2c4_link), si2c4_link },
+	{ "SI2C5", ARRAY_SIZE(si2c5_link), si2c5_link },
+	{ "SI2C6", ARRAY_SIZE(si2c6_link), si2c6_link },
+	{ "SI2C7", ARRAY_SIZE(si2c7_link), si2c7_link },
+	{ "SI2C8", ARRAY_SIZE(si2c8_link), si2c8_link },
+	{ "SI2C9", ARRAY_SIZE(si2c9_link), si2c9_link },
+	{ "SI2C10", ARRAY_SIZE(si2c10_link), si2c10_link },
 	{ "FSI1", ARRAY_SIZE(fsi1), fsi1 },
 	{ "FSI2", ARRAY_SIZE(fsi2), fsi2 },
+	{ "USB2AD", ARRAY_SIZE(usb2ad_link), usb2ad_link },
 	{ "USB2AH", ARRAY_SIZE(usb2ah_link), usb2ah_link },
 	{ "USB2BH", ARRAY_SIZE(usb2bh_link), usb2bh_link },
 	{ "PCIE0RC", ARRAY_SIZE(pcie0rc_link), pcie0rc_link },
--- uboot/tools/imx8mimage.c	2020-11-20 17:00:27.000000000 +0800
+++ uboot-new/tools/imx8mimage.c	2022-08-11 14:33:52.529308769 +0800
@@ -227,7 +227,7 @@
 	struct stat sbuf;
 	unsigned char *ptr;
 	int tail;
-	int zero = 0;
+	uint64_t zero = 0;
 	uint8_t zeros[4096];
 	int size, ret;
 
--- uboot/arch/arm/mach-aspeed/ast2600/scu_info.c	2022-08-10 14:46:28.970108973 +0800
+++ uboot-new/arch/arm/mach-aspeed/ast2600/scu_info.c	2022-08-11 14:37:52.772841479 +0800
@@ -95,7 +95,6 @@
 	u32 sb_sts = readl(ASPEED_SB_STS);
 	u32 hash;
 	u32 rsa;
-	char alg[20];
 
 	if (!(sb_sts & BIT(6)))
 		return;
@@ -104,38 +103,39 @@
 		hash = (qsr >> 10) & 3;
 		rsa = (qsr >> 12) & 3;
 
+		printf("Mode_2, ");
+
 		if (qsr & BIT(27)) {
-			sprintf(alg + strlen(alg), "AES_");
+			printf("AES_");
 		}
 		switch (rsa) {
 		case 0:
-			sprintf(alg + strlen(alg), "RSA1024_");
+			printf("RSA1024_");
 			break;
 		case 1:
-			sprintf(alg + strlen(alg), "RSA2048_");
+			printf("RSA2048_");
 			break;
 		case 2:
-			sprintf(alg + strlen(alg), "RSA3072_");
+			printf("RSA3072_");
 			break;
 		default:
-			sprintf(alg + strlen(alg), "RSA4096_");
+			printf("RSA4096_");
 			break;
 		}
 		switch (hash) {
 		case 0:
-			sprintf(alg + strlen(alg), "SHA224");
+			printf("SHA224\n");
 			break;
 		case 1:
-			sprintf(alg + strlen(alg), "SHA256");
+			printf("SHA256\n");
 			break;
 		case 2:
-			sprintf(alg + strlen(alg), "SHA384");
+			printf("SHA384\n");
 			break;
 		default:
-			sprintf(alg + strlen(alg), "SHA512");
+			printf("SHA512\n");
 			break;
 		}
-		printf("Mode_2, %s\n", alg);
 	} else {
 		printf("Mode_GCM\n");
 		return;
--- uboot/arch/arm/mach-aspeed/ast2600/platform.S	2022-08-10 14:46:29.070109132 +0800
+++ uboot-new/arch/arm/mach-aspeed/ast2600/platform.S	2022-08-11 14:57:32.335073237 +0800
@@ -39,11 +39,13 @@
 #define AST_SCU_REV_ID			(AST_SCU_BASE + 0x014)
 #define AST_SCU_SYSRST_CTRL		(AST_SCU_BASE + 0x040)
 #define AST_SCU_SYSRST_CTRL_CLR		(AST_SCU_BASE + 0x044)
-#define AST_SCU_SYSRST_EVENT           (AST_SCU_BASE + 0x064)
+#define AST_SCU_SYSRST_EVENT		(AST_SCU_BASE + 0x064)
+#define AST_SCU_CLK_STOP_CTRL_CLR	(AST_SCU_BASE + 0x084)
 #define AST_SCU_DEBUG_CTRL              (AST_SCU_BASE + 0x0C8)
 #define AST_SCU_DEBUG_CTRL2             (AST_SCU_BASE + 0x0D8)
 #define AST_SCU_HPLL_PARAM		(AST_SCU_BASE + 0x200)
 #define AST_SCU_HPLL_PARAM_EXT		(AST_SCU_BASE + 0x204)
+#define AST_SCU_USB_MULTI_FUNC		(AST_SCU_BASE + 0x440)
 #define AST_SCU_HW_STRAP1		(AST_SCU_BASE + 0x500)
 #define AST_SCU_HW_STRAP2		(AST_SCU_BASE + 0x510)
 #define AST_SCU_HW_STRAP3               (AST_SCU_BASE + 0x51C)
@@ -274,6 +276,16 @@
 	ldr	r1, =AST_SCU_CA7_PARITY_CHK
 	str	r0, [r1]
 
+	/* Select USB2.0 Device mode as USB port B */
+	ldr	r0, =0x10000000
+	ldr	r1, =AST_SCU_USB_MULTI_FUNC
+	str	r0, [r1]
+
+	/* enable USB port B PHY clk */
+	mov	r0, #0x80
+	ldr	r1, =AST_SCU_CLK_STOP_CTRL_CLR
+	str	r0, [r1]
+
 #if 0
 	ldr	r1, =AST_FMC_WDT2_CTRL_MODE
 	str	r0, [r1]
