diff -Naur uboot_org/arch/arm/dts/ast2600.dtsi uboot/arch/arm/dts/ast2600.dtsi
--- uboot_org/arch/arm/dts/ast2600.dtsi	2020-11-20 17:00:27.000000000 +0800
+++ uboot/arch/arm/dts/ast2600.dtsi	2022-03-03 16:05:18.000000000 +0800
@@ -456,7 +456,10 @@
 				clocks = <&scu ASPEED_CLK_GATE_UART1CLK>;
 				clock-frequency = <1846154>;
 				no-loopback-test;
-				status = "disabled";	
+				u-boot,dm-pre-reloc;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_txd1_default &pinctrl_rxd1_default>;
+				status = "disabled";
 			};
 
 			uart5: serial@1e784000 {
@@ -467,6 +470,7 @@
 				clocks = <&scu ASPEED_CLK_GATE_UART5CLK>;
 				clock-frequency = <1846154>;
 				no-loopback-test;
+				u-boot,dm-pre-reloc;
 				status = "disabled";
 			};
 
@@ -607,6 +611,9 @@
 				clocks = <&scu ASPEED_CLK_GATE_UART2CLK>;
 				clock-frequency = <1846154>;
 				no-loopback-test;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_txd2_default &pinctrl_rxd2_default>;
+				u-boot,dm-pre-reloc;
 				status = "disabled";
 			};
 
@@ -618,6 +625,9 @@
 				clocks = <&scu ASPEED_CLK_GATE_UART3CLK>;
 				clock-frequency = <1846154>;
 				no-loopback-test;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_txd3_default &pinctrl_rxd3_default>;
+				u-boot,dm-pre-reloc;
 				status = "disabled";
 			};
 
@@ -629,6 +639,9 @@
 				clocks = <&scu ASPEED_CLK_GATE_UART4CLK>;
 				clock-frequency = <1846154>;
 				no-loopback-test;
+				u-boot,dm-pre-reloc;
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_txd4_default &pinctrl_rxd4_default>;
 				status = "disabled";
 			};
 
@@ -1622,16 +1635,19 @@
 	pinctrl_rxd1_default: rxd1_default {
 		function = "RXD1";
 		groups = "RXD1";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_rxd2_default: rxd2_default {
 		function = "RXD2";
 		groups = "RXD2";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_rxd3_default: rxd3_default {
 		function = "RXD3";
 		groups = "RXD3";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_rxd4_default: rxd4_default {
@@ -1877,21 +1893,25 @@
 	pinctrl_txd1_default: txd1_default {
 		function = "TXD1";
 		groups = "TXD1";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_txd2_default: txd2_default {
 		function = "TXD2";
 		groups = "TXD2";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_txd3_default: txd3_default {
 		function = "TXD3";
 		groups = "TXD3";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_txd4_default: txd4_default {
 		function = "TXD4";
 		groups = "TXD4";
+		u-boot,dm-pre-reloc;
 	};
 
 	pinctrl_uart6_default: uart6_default {
diff -Naur uboot_org/cmd/otp.c uboot/cmd/otp.c
--- uboot_org/cmd/otp.c	2022-03-02 18:06:48.426220845 +0800
+++ uboot/cmd/otp.c	2022-03-03 16:16:13.000000000 +0800
@@ -99,6 +99,10 @@
 #define SOC_AST2600A3	3
 
 #define OTPTOOL_VERSION(a, b, c) (((a) << 24) + ((b) << 12) + (c))
+#define OTPTOOL_VERSION_MAJOR(x) (((x) >> 24) & 0xff)
+#define OTPTOOL_VERSION_PATCHLEVEL(x) (((x) >> 12) & 0xfff)
+#define OTPTOOL_VERSION_SUBLEVEL(x) ((x) & 0xfff)
+#define OTPTOOL_COMPT_VERSION 1
 
 struct otp_header {
 	u8	otp_magic[8];
@@ -1878,12 +1882,12 @@
 	}
 
 	if (image_soc_ver != info_cb.version) {
-		printf("Version is not match\n");
+		printf("Image SOC version is not match to HW SOC version\n");
 		return OTP_FAILURE;
 	}
 
-	if (otp_header->otptool_ver != OTPTOOL_VERSION(1, 0, 0)) {
-		printf("OTP image is not generated by otptool v1.0.0\n");
+	if (OTPTOOL_VERSION_MAJOR(otp_header->otptool_ver) != OTPTOOL_COMPT_VERSION) {
+		printf("OTP image is not generated by otptool v1.x.x\n");
 		return OTP_FAILURE;
 	}
 
diff -Naur uboot_org/drivers/clk/aspeed/clk_ast2600.c uboot/drivers/clk/aspeed/clk_ast2600.c
--- uboot_org/drivers/clk/aspeed/clk_ast2600.c	2022-03-02 18:06:48.418220960 +0800
+++ uboot/drivers/clk/aspeed/clk_ast2600.c	2022-03-03 16:15:56.000000000 +0800
@@ -460,17 +460,75 @@
 	return (clkin / div);
 }
 
+#ifdef CONFIG_SPL_BUILD
+static void ast2600_enable_uart_pinmux(struct ast2600_scu *scu, int uart_idx)
+{
+	switch(uart_idx) {
+	case 1:
+		scu->pinmux_ctrl7 |= (BIT(7) | BIT(6));
+		break;
+	case 2:
+		scu->pinmux_ctrl7 |= (BIT(14) | BIT(15));
+		break;
+	case 3:
+		scu->pinmux_ctrl6 |= (BIT(28) | BIT(29));
+		break;
+	case 4:
+		scu->pinmux_ctrl4 |= (BIT(14) | BIT(15));
+		break;
+	case 5:
+		/* do nothgin */
+		break;
+	case 6:
+		scu->pinmux_ctrl5 |= (BIT(16) | BIT(17));
+		break;
+	case 7:
+		scu->pinmux_ctrl5 |= (BIT(18) | BIT(19));
+		break;
+	case 8:
+		scu->pinmux_ctrl5 |= (BIT(20) | BIT(21));
+		break;
+	case 9:
+		scu->pinmux_ctrl5 |= (BIT(22) | BIT(23));
+		break;
+	case 10:
+		scu->pinmux_ctrl8 |= (BIT(20) | BIT(21));
+		break;
+	case 11:
+		scu->pinmux_ctrl8 |= (BIT(22) | BIT(23));
+		break;
+	case 12:
+		scu->pinmux_ctrl19 |= (BIT(0) | BIT(1));
+		scu->pinmux_ctrl6 &= ~(BIT(0) | BIT(1));
+		break;
+	case 13:
+		scu->pinmux_ctrl19 |= (BIT(2) | BIT(3));
+		scu->pinmux_ctrl6 &= ~(BIT(2) | BIT(3));
+		break;
+	default:
+		break;
+	}
+}
+#endif
+
 static u32 ast2600_get_uart_clk_rate(struct ast2600_scu *scu, int uart_idx)
 {
+	u32 hicr9 = readl(0x1e789098);
 	u32 uart_sel = readl(&scu->clk_sel4);
 	u32 uart_sel5 = readl(&scu->clk_sel5);
 	ulong uart_clk = 0;
 
+#ifdef CONFIG_SPL_BUILD
+	ast2600_enable_uart_pinmux(scu, uart_idx);
+#endif
+
 	switch (uart_idx) {
 	case 1:
 	case 2:
 	case 3:
 	case 4:
+		hicr9 &= ~(BIT(uart_idx + 3));
+		writel(hicr9, 0x1e789098);
 	case 6:
 		if (uart_sel & BIT(uart_idx - 1))
 			uart_clk = ast2600_get_uart_huxclk_rate(scu);
diff -Naur uboot_org/drivers/pinctrl/aspeed/pinctrl_ast2600.c uboot/drivers/pinctrl/aspeed/pinctrl_ast2600.c
--- uboot_org/drivers/pinctrl/aspeed/pinctrl_ast2600.c	2020-11-20 17:00:27.000000000 +0800
+++ uboot/drivers/pinctrl/aspeed/pinctrl_ast2600.c	2022-03-03 16:09:47.000000000 +0800
@@ -326,6 +326,38 @@
 	{ 0x500, BIT(24), 0 },	//dedicate rc reset
 };
 
+static struct aspeed_sig_desc txd1_link[] = {
+	{ 0x41c, BIT(6), 0 },
+};
+
+static struct aspeed_sig_desc rxd1_link[] = {
+	{ 0x41c, BIT(7), 0 },
+};
+
+static struct aspeed_sig_desc txd2_link[] = {
+	{ 0x41c, BIT(14), 0 },
+};
+
+static struct aspeed_sig_desc rxd2_link[] = {
+	{ 0x41c, BIT(15), 0 },
+};
+
+static struct aspeed_sig_desc txd3_link[] = {
+	{ 0x418, BIT(28), 0 },
+};
+
+static struct aspeed_sig_desc rxd3_link[] = {
+	{ 0x418, BIT(29), 0 },
+};
+
+static struct aspeed_sig_desc txd4_link[] = {
+	{ 0x410, BIT(14), 0 },
+};
+
+static struct aspeed_sig_desc rxd4_link[] = {
+	{ 0x410, BIT(15), 0 },
+};
+
 static const struct aspeed_group_config ast2600_groups[] = {
 	{ "MAC1LINK", ARRAY_SIZE(mac1_link), mac1_link },
 	{ "MAC2LINK", ARRAY_SIZE(mac2_link), mac2_link },
@@ -383,7 +415,16 @@
 	{ "USB2AH", ARRAY_SIZE(usb2ah_link), usb2ah_link },
 	{ "USB2BH", ARRAY_SIZE(usb2bh_link), usb2bh_link },
 	{ "PCIE0RC", ARRAY_SIZE(pcie0rc_link), pcie0rc_link },
-	{ "PCIE1RC", ARRAY_SIZE(pcie1rc_link), pcie1rc_link },	
+	{ "PCIE1RC", ARRAY_SIZE(pcie1rc_link), pcie1rc_link },
+	{ "TXD1", ARRAY_SIZE(txd1_link), txd1_link },
+	{ "RXD1", ARRAY_SIZE(rxd1_link), rxd1_link },
+	{ "TXD2", ARRAY_SIZE(txd2_link), txd2_link },
+	{ "RXD2", ARRAY_SIZE(rxd2_link), rxd2_link },
+	{ "TXD3", ARRAY_SIZE(txd3_link), txd3_link },
+	{ "RXD3", ARRAY_SIZE(rxd3_link), rxd3_link },
+	{ "TXD4", ARRAY_SIZE(txd4_link), txd4_link },
+	{ "RXD4", ARRAY_SIZE(rxd4_link), rxd4_link },
+
 };
 
 static int ast2600_pinctrl_get_groups_count(struct udevice *dev)
