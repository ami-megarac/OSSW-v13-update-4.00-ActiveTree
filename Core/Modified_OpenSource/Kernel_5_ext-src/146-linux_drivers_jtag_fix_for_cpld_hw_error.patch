--- ori_linux/drivers/jtag/jtag-aspeed.c	2022-02-19 20:33:24.390353103 +0800
+++ linux/drivers/jtag/jtag-aspeed.c	2022-02-19 22:24:06.844185835 +0800
@@ -201,6 +201,32 @@
 	u32 pad_data_zero[ASPEED_JTAG_MAX_PAD_SIZE / 32];
 };
 
+#define ALTERA_SUPPORT
+#ifdef ALTERA_SUPPORT
+struct altera_io_xfer {
+    unsigned int reserved;
+    unsigned long Address;
+    unsigned long Data;
+	int id; //0:JTAG0 1:JTAG1
+};
+
+int jtag_write_register(struct altera_io_xfer *io,int size)
+{
+    io=io;
+    size=size;
+	return 0;
+
+}
+
+int jtag_read_register(struct altera_io_xfer *io,int size)
+{
+    io=io;
+    size=size;
+    return 0;
+}
+#endif
+
+
 /*
  * Multi generation support is enabled by fops and low level assped function
  * mapping using asped_jtag_functions struct as config mechanism.
@@ -1618,7 +1644,10 @@
 	},
 };
 module_platform_driver(aspeed_jtag_driver);
-
+#ifdef ALTERA_SUPPORT
+EXPORT_SYMBOL(jtag_write_register);
+EXPORT_SYMBOL(jtag_read_register);
+#endif
 MODULE_AUTHOR("Oleksandr Shamray <oleksandrs@mellanox.com>");
 MODULE_DESCRIPTION("ASPEED JTAG driver");
 MODULE_LICENSE("GPL v2");
