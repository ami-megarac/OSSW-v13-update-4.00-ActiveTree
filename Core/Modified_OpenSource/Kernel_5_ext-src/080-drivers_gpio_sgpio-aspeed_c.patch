--- linux_old/drivers/gpio/sgpio-aspeed.c	2021-08-16 16:31:13.341621195 +0800
+++ linux/drivers/gpio/sgpio-aspeed.c	2021-08-16 16:34:37.000000000 +0800
@@ -34,7 +34,7 @@
 #define ASPEED_SGPIO_PINS_MASK	  GENMASK(10, 6)
 #define ASPEED_SGPIO_CLK_DIV_MASK GENMASK(31, 16)
 #define ASPEED_SGPIO_ENABLE	  BIT(0)
-
+#define DIR_OUT 0
 struct aspeed_sgpio {
 	struct gpio_chip chip;
 	struct clk *pclk;
@@ -137,8 +137,8 @@
 	}
 }
 
-#define GPIO_BANK(x)    ((x % SGPIO_OUTPUT_OFFSET) >> 5)
-#define GPIO_OFFSET(x)  ((x % SGPIO_OUTPUT_OFFSET) & 0x1f)
+#define GPIO_BANK(x)    (((x-1) % SGPIO_OUTPUT_OFFSET) >> 5)
+#define GPIO_OFFSET(x)  (((x-1) % SGPIO_OUTPUT_OFFSET) & 0x1f)
 #define GPIO_BIT(x)     BIT(GPIO_OFFSET(x))
 
 static const struct aspeed_sgpio_bank *to_bank(unsigned int offset)
@@ -198,8 +198,8 @@
 	int rc = 0;
 
 	spin_lock_irqsave(&gpio->lock, flags);
-
-	reg = aspeed_sgpio_is_input(offset) ? reg_val : reg_rdata;
+	reg = reg_rdata;
+	//reg = aspeed_sgpio_is_input(offset) ? reg_val : reg_rdata;
 	rc = !!(ioread32(bank_reg(gpio, bank, reg)) & GPIO_BIT(offset));
 
 	spin_unlock_irqrestore(&gpio->lock, flags);
@@ -214,9 +214,9 @@
 	void __iomem *addr_r, *addr_w;
 	u32 reg = 0;
 
-	if (aspeed_sgpio_is_input(offset))
+/*	if (aspeed_sgpio_is_input(offset))
 		return -EINVAL;
-
+*/
 	/* Since this is an output, read the cached value from rdata, then
 	 * update val. */
 	addr_r = bank_reg(gpio, bank, reg_rdata);
@@ -269,7 +269,7 @@
 
 static int aspeed_sgpio_get_direction(struct gpio_chip *gc, unsigned int offset)
 {
-	return !!aspeed_sgpio_is_input(offset);
+	return DIR_OUT;
 }
 
 static void irqd_to_aspeed_sgpio_data(struct irq_data *d,
