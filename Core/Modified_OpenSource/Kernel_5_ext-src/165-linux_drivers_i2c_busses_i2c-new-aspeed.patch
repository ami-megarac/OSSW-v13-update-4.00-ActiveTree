--- linux_old/drivers/i2c/busses/i2c-new-aspeed.c	2022-06-15 14:31:56.113962179 +0530
+++ linux/drivers/i2c/busses/i2c-new-aspeed.c	2022-06-15 14:49:46.411626993 +0530
@@ -542,7 +542,7 @@
 		}
 	}
 }
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 
 #define SLAVE_BUF_SIZE 256              // maximum byte count from slave recorded
 #define I2C_CTRL_COUNT 16               // count of I2C controllers inside the BMC
@@ -601,7 +601,7 @@
 } check_mctp_t;
 #endif
 
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 void i2c_set_mctp_complete_callback(void (*func)(unsigned int busNum))
 {
         mctp_slave_complete_callback = func;
@@ -616,7 +616,7 @@
 EXPORT_SYMBOL_GPL(i2c_set_mctp_bmc_cmd_callback);
 #endif
 
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 // Check, if the message belongs to an MCTP command and if it is the last message of the command
 static check_mctp_t check_mctp_cmd(u8 *dataBuf, int receiveLen)
 {
@@ -650,7 +650,7 @@
 }
 #endif
 
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 static void check_mctp_response_complete(unsigned int busNum, u8 *dataBuf, int receiveLen)
 {
         check_mctp_t    retVal;
@@ -665,7 +665,7 @@
 }
 #endif
 
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 static void i2c_slave_receive(struct aspeed_new_i2c_bus *i2c_bus, int receiveLen)
 {
         unsigned int	busNum = i2c_bus->adap.nr;
@@ -765,7 +765,7 @@
 							      AST_I2CS_DMA_LEN_STS));
 			dev_dbg(i2c_bus->dev, "rx len %d\n", slave_rx_len);
 			for (i = 0; i < slave_rx_len; i++) {
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 				add_slave_byte(i2c_bus, i2c_bus->slave_dma_buf[i]);
 #endif				
 				i2c_slave_event(i2c_bus->slave, I2C_SLAVE_WRITE_RECEIVED,
@@ -780,7 +780,7 @@
 			for (i = 0; i < slave_rx_len; i++) {
 				value = readb(i2c_bus->buf_base + i);
 				dev_dbg(i2c_bus->dev, "[%02x]", value);
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 				add_slave_byte(i2c_bus, value);
 #endif
 				i2c_slave_event(i2c_bus->slave, I2C_SLAVE_WRITE_RECEIVED, &value);
@@ -792,7 +792,7 @@
 			byte_data = AST_I2CC_GET_RX_BUFF(readl(i2c_bus->reg_base +
 							 AST_I2CC_STS_AND_BUFF));
 			dev_dbg(i2c_bus->dev, "[%02x]", byte_data);
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 			add_slave_byte(i2c_bus, byte_data);
 #endif
 
@@ -800,7 +800,7 @@
 		}
 		if (sts & AST_I2CS_STOP)
 		{
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 			i2c_slave_receive(i2c_bus, slave_rx_len);
 
 #endif
@@ -830,7 +830,7 @@
 							      AST_I2CS_DMA_LEN_STS));
 			for (i = 0; i < slave_rx_len; i++) {
 				dev_dbg(i2c_bus->dev, "rx [%02x]", i2c_bus->slave_dma_buf[i]);
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 			add_slave_byte(i2c_bus, i2c_bus->slave_dma_buf[i]);
 #endif
 				i2c_slave_event(i2c_bus->slave, I2C_SLAVE_WRITE_RECEIVED,
@@ -848,7 +848,7 @@
 			for (i = 0; i < slave_rx_len; i++) {
 				value = readb(i2c_bus->buf_base + i);
 				dev_dbg(i2c_bus->dev, "rx : [%02x]", value);
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 				add_slave_byte(i2c_bus, value);
 #endif
 				i2c_slave_event(i2c_bus->slave, I2C_SLAVE_WRITE_RECEIVED, &value);
@@ -863,7 +863,7 @@
 			byte_data = AST_I2CC_GET_RX_BUFF(readl(i2c_bus->reg_base +
 							 AST_I2CC_STS_AND_BUFF));
 			dev_dbg(i2c_bus->dev, "rx : [%02x]", byte_data);
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 			add_slave_byte(i2c_bus, byte_data);
 #endif
 			i2c_slave_event(i2c_bus->slave, I2C_SLAVE_WRITE_RECEIVED, &byte_data);
@@ -977,7 +977,7 @@
 		dev_dbg(i2c_bus->dev, "S : D\n");
 		byte_data = AST_I2CC_GET_RX_BUFF(readl(i2c_bus->reg_base + AST_I2CC_STS_AND_BUFF));
 		dev_dbg(i2c_bus->dev, "rx [%x]", byte_data);
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
 		add_slave_byte(i2c_bus, byte_data);
 #endif
 		i2c_slave_event(i2c_bus->slave, I2C_SLAVE_WRITE_RECEIVED, &byte_data);
@@ -1068,7 +1068,7 @@
 	int xfer_len = 0;
 	int i = 0;
 	u32 cmd;
-#ifdef CONFIG_SPX_FEATURE_VIRTUALI2C_SUPPORT
+#ifdef CONFIG_SPX_FEATURE_I2CMUX_ADDON_SUPPORT
         int busNum = i2c_bus->adap.nr;
 
 	if ( (!(msg->flags & I2C_M_RD)) && (check_mctp_cmd(msg->buf, msg->len) == MCTP_REQ_EOM))
