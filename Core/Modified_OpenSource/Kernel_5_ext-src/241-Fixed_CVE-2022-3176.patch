--- linux_patch108/drivers/android/binder.c	2022-10-18 09:52:54.113448328 +0800
+++ linux/drivers/android/binder.c	2022-10-18 10:23:09.413888096 +0800
@@ -6080,6 +6080,7 @@
 	.open = binder_open,
 	.flush = binder_flush,
 	.release = binder_release,
+	.may_pollfree = true,
 };
 
 static int __init init_binder_device(const char *name)
--- linux_patch108/fs/io_uring.c	2022-10-18 09:52:38.013488941 +0800
+++ linux/fs/io_uring.c	2022-10-18 10:24:47.211643519 +0800
@@ -1908,6 +1908,9 @@
 	__poll_t mask;
 	u16 events;
 
+	if (req->file->f_op->may_pollfree)
+		return -EOPNOTSUPP;
+
 	if (unlikely(req->ctx->flags & IORING_SETUP_IOPOLL))
 		return -EINVAL;
 	if (sqe->addr || sqe->ioprio || sqe->off || sqe->len || sqe->buf_index)
--- linux_patch108/fs/signalfd.c	2022-10-18 09:52:38.977486508 +0800
+++ linux/fs/signalfd.c	2022-10-18 10:25:34.059526334 +0800
@@ -258,6 +258,7 @@
 	.poll		= signalfd_poll,
 	.read		= signalfd_read,
 	.llseek		= noop_llseek,
+	.may_pollfree	= true,
 };
 
 static int do_signalfd4(int ufd, sigset_t *mask, int flags)
--- linux_patch108/include/linux/fs.h	2022-10-18 09:53:57.455288602 +0800
+++ linux/include/linux/fs.h	2022-10-18 10:28:46.157092918 +0800
@@ -1859,6 +1859,7 @@
 				   struct file *file_out, loff_t pos_out,
 				   loff_t len, unsigned int remap_flags);
 	int (*fadvise)(struct file *, loff_t, loff_t, int);
+	bool may_pollfree;
 } __randomize_layout;
 
 struct inode_operations {
