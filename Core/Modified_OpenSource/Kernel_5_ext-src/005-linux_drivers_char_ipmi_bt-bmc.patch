--- linux-5.4.85/drivers/char/ipmi/bt-bmc.c	2021-04-15 16:07:52.878763833 +0800
+++ linux-5.4.85-new/drivers/char/ipmi/bt-bmc.c	2021-04-28 16:47:27.857854578 +0800
@@ -264,12 +264,6 @@
 	ssize_t ret = 0;
 	ssize_t nwritten;
 
-	/*
-	 * send a minimum response size
-	 */
-	if (count < 5)
-		return -EINVAL;
-
 	WARN_ON(*ppos);
 
 	/*
@@ -289,7 +283,7 @@
 		goto out_unlock;
 	}
 
-	clr_wr_ptr(bt_bmc);
+	bt_writen(bt_bmc, (u8 *)&count, 1);
 
 	while (count) {
 		nwritten = min_t(ssize_t, count, sizeof(kbuffer));
@@ -306,6 +300,7 @@
 	}
 
 	set_b2h_atn(bt_bmc);
+	clr_wr_ptr(bt_bmc);
 
 out_unlock:
 	mutex_unlock(&bt_bmc->mutex);
@@ -399,15 +394,15 @@
 	struct device *dev = &pdev->dev;
 	int rc;
 
-	bt_bmc->irq = platform_get_irq_optional(pdev, 0);
-	if (bt_bmc->irq < 0)
-		return bt_bmc->irq;
+	bt_bmc->irq = platform_get_irq(pdev, 0);
+	if (!bt_bmc->irq)
+		return -ENODEV;
 
 	rc = devm_request_irq(dev, bt_bmc->irq, bt_bmc_irq, IRQF_SHARED,
 			      DEVICE_NAME, bt_bmc);
 	if (rc < 0) {
 		dev_warn(dev, "Unable to request IRQ %d\n", bt_bmc->irq);
-		bt_bmc->irq = rc;
+		bt_bmc->irq = 0;
 		return rc;
 	}
 
@@ -479,7 +474,7 @@
 
 	bt_bmc_config_irq(bt_bmc, pdev);
 
-	if (bt_bmc->irq >= 0) {
+	if (bt_bmc->irq) {
 		dev_info(dev, "Using IRQ %d\n", bt_bmc->irq);
 	} else {
 		dev_info(dev, "No IRQ; using timer\n");
@@ -505,7 +500,7 @@
 	struct bt_bmc *bt_bmc = dev_get_drvdata(&pdev->dev);
 
 	misc_deregister(&bt_bmc->miscdev);
-	if (bt_bmc->irq < 0)
+	if (!bt_bmc->irq)
 		del_timer_sync(&bt_bmc->poll_timer);
 	return 0;
 }
@@ -513,6 +508,7 @@
 static const struct of_device_id bt_bmc_match[] = {
 	{ .compatible = "aspeed,ast2400-ibt-bmc" },
 	{ .compatible = "aspeed,ast2500-ibt-bmc" },
+	{ .compatible = "aspeed,ast2600-ibt-bmc" },
 	{ },
 };
 
