diff -Naur busybox_old/networking/ifupdown.c busybox/networking/ifupdown.c
--- busybox_old/networking/ifupdown.c	2023-10-10 14:32:51.269922516 +0530
+++ busybox/networking/ifupdown.c	2023-10-10 14:36:28.075755537 +0530
@@ -392,25 +392,35 @@
 static int FAST_FUNC static_up6(struct interface_defn_t *ifd, execfn *exec)
 {
 	int result;
+
+# if ENABLE_FEATURE_IFUPDOWN_IP
 	/* Sleep a bit, otherwise static_up6 tries to execute following commands too soon 
          when interface is not up */
 	sleep(1);
-# if ENABLE_FEATURE_IFUPDOWN_IP
 	result = execute("ip addr add %address%/%netmask% dev %iface%[[ label %label%]]", ifd, exec);
 	result += execute("ip link set[[ mtu %mtu%]][[ addr %hwaddress%]] %iface% up", ifd, exec);
 	/* Was: "[[ ip ....%gateway% ]]". Removed extra spaces w/o checking */
-	result += execute("[[ip route add ::/0 via %gateway%]][[ prio %metric%]]", ifd, exec);
+	if(!execute("[[ip route add ::/0 via %gateway%]][[ prio %metric%]]", ifd, exec))
+	{
+	    bb_error_msg("route rule failed\n");
+	}
 # else
 	result = execute("ifconfig %iface%[[ media %media%]][[ hw %hwaddress%]][[ mtu %mtu%]] up", ifd, exec);
+	/* Sleep a bit, otherwise static_up6 tries to execute following commands too soon 
+         when interface is not up */
+	sleep(2);
 	result += execute("ifconfig %iface% add %address%/%netmask%", ifd, exec);
-	result += execute("[[route -A inet6 add ::/0 gw %gateway%[[ metric %metric%]] %iface%]]", ifd, exec);
+	if(!execute("[[route -A inet6 add ::/0 gw %gateway%[[ metric %metric%]] %iface%]]", ifd, exec))
+	{
+	    bb_error_msg("route rule failed\n");
+	}
 # endif
 	// Prevent interface not up when no Ipv6 address provide in static mode via launching ipmi command
 	if (strncmp(iface_family, ifd->address_family->name,sizeof(iface_family)) == 0) {
 		return ((result > 0) ? result : 0);
 	} // if
 	else {
-		return ((result == 3) ? 3 : 0);
+		return ((result == 2) ? 2 : 0);
 	} // elseh
 }
 
